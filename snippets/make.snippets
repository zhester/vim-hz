##############################################################################
#
# Makefile Snippets
#
##############################################################################

#=============================================================================
# Structural Comments
#=============================================================================

# Separator Bars
snippet b0
	#=============================================================================

# Section Comments
snippet s0
	#=============================================================================
	# ${1}
	#=============================================================================
snippet c0
	#-----------------------------------------------------------------------------
	# ${1}
	#-----------------------------------------------------------------------------
# end of snippet


#=============================================================================
# Rule Templates
#=============================================================================

snippet rule
	${1:target} : ${2:dependencies}
		${3:recipe}
# end of snippet

snippet magic
	IMAGE   := $(shell basename \`pwd\`)
	SOURCES := $(wildcard *.c)
	OBJECTS := $(patsubst %.c, %.o, $(SOURCES))
	$(IMAGE) : $(OBJECTS)
		$(LD) $(LDFLAGS) -o $@ $(OBJECTS)
	%.o : %.c *.h
		$(CC) $(CFLAGS) -o $@ -c $<
# end of snippet


#=============================================================================
# Formatting and Style Templates
#=============================================================================

#=============================================================================
# Literals and Common Implementations
#=============================================================================

#=============================================================================
# Miscellaneous Automation
#=============================================================================

#=============================================================================
# Source Code Templates
#=============================================================================

#-----------------------------------------------------------------------------
# Simple Makefile Starter
#-----------------------------------------------------------------------------

snippet simple
	##############################################################################
	#
	#   Makefile
	#
	#   Note: This assumes you have at least one header (.h) file in your project.
	#   If that is not the case, remove the "*.h" dependency from the rule to
	#   build object files.  Or, just start using headers like a normal person.
	#
	##############################################################################
	
	# Basic compile environment settings
	CC = /usr/bin/gcc
	CFLAGS = -Wall
	LD = $(CC)
	LDFLAGS = $(CFLAGS)
	AR = /usr/bin/ar
	ARFLAGS = -cr
	SHELL = /usr/bin/sh
	
	# Add debug symbols for any debug target.
	debug: CFLAGS += -ggdb
	debug: LDFLAGS += -ggdb
	
	# Detect build environment.
	UNAME := $(shell uname)
	
	# Base name of the project and final binary
	PROJ := $(shell basename \`pwd\`)
	
	# Project source files
	SOURCES := $(wildcard *.c)
	
	# Build directory
	BLDDIR = build
	
	# Derive object targets from source files
	OBJECTS := $(patsubst %.c, $(BLDDIR)/%.o, $(SOURCES))
	
	# Default target
	all: $(BLDDIR)/$(PROJ)
	
	# How to build the project binary
	$(BLDDIR)/$(PROJ): $(OBJECTS)
		$(LD) $(LDFLAGS) -o $@ $(OBJECTS)
	
	# How to build object files
	$(BLDDIR)/%.o: %.c *.h | $(BLDDIR)
		$(CC) $(CFLAGS) -o $@ -c $<
	
	# Make sure there's an output directory.
	$(BLDDIR):
		mkdir -p $(BLDDIR)
	
	# How to clean the output files
	clean:
		rm -rf $(BLDDIR)

# end of snippet

