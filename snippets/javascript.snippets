# JavaScript Code Snippets

# Separator Bars
snippet b0
	/*--------------------------------------------------------------------------*/
snippet b1
	    /*----------------------------------------------------------------------*/

# Blocky Comments
snippet c0
	/*----------------------------------------------------------------------------
	${1}
	----------------------------------------------------------------------------*/
snippet c1
	    /*------------------------------------------------------------------------
	    ${1}
	    ------------------------------------------------------------------------*/
snippet c2
	        /*--------------------------------------------------------------------
	        ${1}
	        --------------------------------------------------------------------*/

# Function
snippet fun
	/**
	 *  ${2:description}
	 *
	 */
	function ${1:name}() {
	
	    ${3}
	}
snippet vfun
	/**
	 *  ${2:description}
	 *
	 *  @param param Description
	 *  @return
	 *  @throws
	 */
	function ${1:name}( param ) {
	
	    ${3}
	
	    return false;
	}
snippet class
	/*----------------------------------------------------------------------------
	${2:description}
	----------------------------------------------------------------------------*/
	${1:name} = ( function( ns ) {
	
	    ${3}
	
	    return ns;
	} )( $1 || {} );
snippet event
	${1:object}.addEventListener(
	    '${2:event}',
	    function( event ) {
	        ${3}
	    },
	    false
	);
snippet arg
	var ${1:name} = arguments.length > ${2:0} ? arguments[ $2 ];

# main()-like setup
snippet main
	/**
	 *  Runs the script from the beginning.
	 *
	 *  @param argv Script parameters
	 *  @return     True on success, false on abnormal termination
	 */
	function main( argv ) {
	
	    //Begin script execution.
	    ${1}
	
	    //Return normal termination status.
	    return true;
	}
	
	//Run the script's entry point once the page has loaded.
	window.addEventListener(
	    'load',
	    function( event ) {
	        if( 'main' in window ) {
	            var hash = window.location.hash.replace( /^#/, '' );
	            var argv = hash.split( /(?:[+\s]|%20)*(?<!\),(?:[+\s]|%20)*/ );
	            window.main.apply( window, argv );
	        }
	    },
	    false
	);

# Library submodule source
snippet library
	/*****************************************************************************
	${1:Library Title}
	
	*****************************************************************************/
	
	/*----------------------------------------------------------------------------
	Library Boilerplate
	----------------------------------------------------------------------------*/
	var ${3:hz} = ( function( ns ) { return ns; } )( $3 || {} );
	
	/*----------------------------------------------------------------------------
	Module Dependencies
	----------------------------------------------------------------------------*/
	/*?jspp { "include" : { "$3" : [] } } ?*/
	
	/*----------------------------------------------------------------------------
	$1 Submodule
	----------------------------------------------------------------------------*/
	$3.${2:submodule} = ( function( ns ) {
	
	    /*------------------------------------------------------------------------
	    Public Properties
	    ------------------------------------------------------------------------*/
	
	    /*------------------------------------------------------------------------
	    Public Methods
	    ------------------------------------------------------------------------*/
	
	    /*------------------------------------------------------------------------
	    Classes
	    ------------------------------------------------------------------------*/
	
	    /*------------------------------------------------------------------------
	    Private Properties
	    ------------------------------------------------------------------------*/
	
	    /*------------------------------------------------------------------------
	    Private Methods
	    ------------------------------------------------------------------------*/
	
	
	    return ns;
	} )( $3.$2 || {} );
	

# Generic script source
snippet source
	/*****************************************************************************
	${1:description}
	
	*****************************************************************************/
	
	/*----------------------------------------------------------------------------
	Dependencies
	----------------------------------------------------------------------------*/
	/*?jspp { "include" : { "hz" : [] } } ?*/
	
	/*----------------------------------------------------------------------------
	${2}
	----------------------------------------------------------------------------*/
	


