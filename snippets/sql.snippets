##############################################################################
#
# SQL Snippets
#
##############################################################################

#=============================================================================
# Structural Comments
#=============================================================================

# Comment Blocks
snippet c0
	/*----------------------------------------------------------------------------
	${1}
	----------------------------------------------------------------------------*/
snippet c1
	    /*------------------------------------------------------------------------
	    ${1}
	    ------------------------------------------------------------------------*/
snippet c2
	        /*--------------------------------------------------------------------
	        ${1}
	        --------------------------------------------------------------------*/
snippet c3
	            /*----------------------------------------------------------------
	            ${1}
	            ----------------------------------------------------------------*/
snippet c4
	                /*------------------------------------------------------------
	                ${1}
	                ------------------------------------------------------------*/
snippet c5
	                    /*--------------------------------------------------------
	                    ${1}
	                    --------------------------------------------------------*/
snippet c6
	                        /*----------------------------------------------------
	                        ${1}
	                        ----------------------------------------------------*/
# End

# Separator Bars
snippet b0
	/*==========================================================================*/
snippet b1
	    /*======================================================================*/
# End


#=============================================================================
# Function and Class Templates
#=============================================================================

# Basic Function (Stored Procedure) Definition
snippet fun
	/*----------------------------------------------------------------------------
	${2:description}
	----------------------------------------------------------------------------*/
	
	delimiter $$
	
	drop function if exists ${1:name} $$
	
	create function $1(
	    bar                 int
	)
	    returns int deterministic
	    begin
	
	        -- Local variables
	        declare foo     int default 0;
	
	        -- Return result.
	        return foo + bar;
	
	    end $$
	
	delimiter ;
	
# End

# Verbose Function (Stored Procedure) Definition
snippet vfun
	/*----------------------------------------------------------------------------
	${2:description}
	
	@param bar An input to the function
	@return    Result of messing with foo
	----------------------------------------------------------------------------*/
	
	delimiter $$
	
	drop function if exists ${1:name} $$
	
	create function $1(
	    bar                 int
	)
	    returns int deterministic
	    -- returns int reads sql data
	    -- returns int writes sql data
	    begin
	
	        -- Local variables
	        declare foo     int default 0;
	
	        -- Do something simple.
	        set foo = 1;
	
	        -- Increment foo a couple times.
	        while foo < 10 do
	            set foo = foo + 1
	        end while;
	
	        -- Test foo for some reason.
	        if foo < 10 then
	            set foo = 10;
	        elseif foo > 10 then
	            set foo = 10;
	        else
	            set foo = 10;
	        end if;
	
	        -- Return result.
	        return foo;
	
	    end $$
	
	delimiter ;
	
# End

# Trigger Before Insert
snippet tbi
	/*----------------------------------------------------------------------------
	${2:description}
	----------------------------------------------------------------------------*/
	
	delimiter $$
	
	drop trigger if exists tbi_$1$$
	
	create trigger tbi_$1
	    before insert on ${1:table} for each row
	    before
	        set new.${3:column} = ${4:value};
	    end $$
	
	delimiter ;
	
# End

# Trigger Before Update
snippet tbu
	/*----------------------------------------------------------------------------
	${2:description}
	----------------------------------------------------------------------------*/
	
	delimiter $$
	
	drop trigger if exists tbu_$1$$
	
	create trigger tbu_$1
	    before update on ${1:table} for each row
	    before
	        set new.${3:column} = ${4:value};
	    end $$
	
	delimiter ;
	
# End


#=============================================================================
# Formatting and Style Templates
#=============================================================================

#=============================================================================
# Literals and Common Implementations
#=============================================================================

# Select Skeleton
snippet select
	select
	    ${1:columns}
	from
	    ${2:table}
	    left join ${3:table2} on $3.$2_id = $2.id
	where
	    ${4:clauses}
	group by
	    ${5:columns}
	order by
	    ${6:columns}
	limit
	    ${7:offset}, ${8:length}
# End

# Table Skeleton
snippet table
	/*----------------------------------------------------------------------------
	${2:description}
	----------------------------------------------------------------------------*/
	drop table if exists \`${1:name}\`;
	create table \`$1\` (
	
	    /*------------------------------------------------------------------------
	    Referential Columns
	    ------------------------------------------------------------------------*/
	    \`id\`                bigint unsigned not null auto_increment,
	
	    /*------------------------------------------------------------------------
	    Data Columns
	    ------------------------------------------------------------------------*/
	    ${3}
	
	    /*------------------------------------------------------------------------
	    Indexes
	    ------------------------------------------------------------------------*/
	    primary key( \`id\` )
	
	) engine = MyISAM default charset = utf8;
	
# End

# Common Column/Key Definitions
snippet time
	\`created\`           timestamp default current_timestamp,
	\`modified\`          timestamp default current_timestamp
	                      on update current_timestamp,
	${1}
	key \`created\`  ( \`created\`  ),
	key \`modified\` ( \`modified\` )
snippet string
	\`${1:column}\`       varchar( ${2:255} ) not null default ''${3}
snippet ftk
	fulltext \`$1\` ( \`${1:column}\`${2:, \`other\`} )${3}
snippet fk
	foreign key( \`${1:column}\` )
	    references \`${2:ftable}\`( \`${3:fcolumn}\` )
# End

# Other Query Lines
snippet join
	left join ${3:source} on $3.$2_id = ${2:target}.id
# End


#=============================================================================
# Miscellaneous Automation
#=============================================================================

#=============================================================================
# Source Code Templates
#=============================================================================

# Schema File Header
snippet schema
	/*****************************************************************************
	
	${1}
	
	*****************************************************************************/
	
# End

