##############################################################################
#
# C++ Code Snippets
#
##############################################################################

#=============================================================================
# Structural Comments
#=============================================================================

# Comment Blocks
snippet c0
	/*----------------------------------------------------------------------------
	${1}
	----------------------------------------------------------------------------*/
snippet c1
	    /*------------------------------------------------------------------------
	    ${1}
	    ------------------------------------------------------------------------*/
snippet c2
	        /*--------------------------------------------------------------------
	        ${1}
	        --------------------------------------------------------------------*/
snippet c3
	            /*----------------------------------------------------------------
	            ${1}
	            ----------------------------------------------------------------*/
snippet c4
	                /*------------------------------------------------------------
	                ${1}
	                ------------------------------------------------------------*/
snippet c5
	                    /*--------------------------------------------------------
	                    ${1}
	                    --------------------------------------------------------*/
snippet c6
	                        /*----------------------------------------------------
	                        ${1}
	                        ----------------------------------------------------*/
# end of snippet

# Separator Bars
snippet b0
	/*==========================================================================*/
snippet b1
	    /*======================================================================*/
snippet b2
	        /*==================================================================*/
# end of snippet


#=============================================================================
# Function and Class Templates
#=============================================================================

# Basic function definition
snippet fun
	/**===========================================================================
	${2:description}
	============================================================================*/
	int ${1:function}(
	    int param
	) {
	
	    /*------------------------------------------------------------------------
	    Local Variables
	    ------------------------------------------------------------------------*/
	    int local;        /* description */
	
	    ${3}
	
	    /*------------------------------------------------------------------------
	    Return
	    ------------------------------------------------------------------------*/
	    return 0;
	}
	
# end of snippet

# Generic method definition
snippet meth
	/**===========================================================================
	${3:description}
	============================================================================*/
	void ${1:ClassName}::${2:method}(
	    void
	) {
	
	    /*------------------------------------------------------------------------
	    Local Variables
	    ------------------------------------------------------------------------*/
	    int local;        /* description */
	
	    ${4}
	
	    /*------------------------------------------------------------------------
	    Return
	    ------------------------------------------------------------------------*/
	    return 0;
	}
	
# end of snippet

# Constructor and destructor method definitions
snippet cons
	/**===========================================================================
	$1 Constructor
	============================================================================*/
	${1:ClassName}::$1(
	    int parameter
	) :
	
	    //Initialize parent state.
	    ${2:Base}( parameter ),
	
	    //Initialize member state.
	    member( 42 )
	
	{
	
	    ${3}
	
	}
	
	
	/**===========================================================================
	$1 Destructor
	============================================================================*/
	$1::~$1( void ) {
	
	    ${4}
	
	}
	
# end of snippet

# Class declaration
snippet class
	/**===========================================================================
	${3:description}
	============================================================================*/
	class ${1:ClassName} : public ${2:BaseClass} {
	
	/*==========================================================================*/
	public:
	
	    explicit $1(
	        int parameter
	    );
	
	    ~$1( void );
	
	/*==========================================================================*/
	protected:
	
	    ${4}
	
	/*==========================================================================*/
	private:
	
	    ${5}
	
	};
	
# end of snippet


#=============================================================================
# Formatting and Style Templates
#=============================================================================

# Columns reminder
snippet col
	+---+-------------------+---------------+-------------------------------+---+
	|1  |5                  |25             |41                             |73 |77
	/*****************************************************************************
	File Header
	*****************************************************************************/
	/*============================================================================
	Section Heading
	============================================================================*/
	    type                name;           /* variable comment                 */
	/*----------------------------------------------------------------------------
	Block Comment
	----------------------------------------------------------------------------*/
	    /*------------------------------------------------------------------------
	    Block Comment
	    ------------------------------------------------------------------------*/
	        /*--------------------------------------------------------------------
	        Block Comment
	        --------------------------------------------------------------------*/
	|1  |5                  |25             |41                             |73 |77
	+---+-------------------+---------------+-------------------------------+---+
# end of snippet


#=============================================================================
# Literals and Common Implementations
#=============================================================================

# main()
snippet main
	/**===========================================================================
	Application Entry Point
	
	@param argc Number of command-line arguments
	@param argv Sequence of command-line argument strings
	@return     Program exit status, 0 = success
	============================================================================*/
	int main(
	    int          argc,
	    const char** argv
	) {
	
	    /*------------------------------------------------------------------------
	    Comment.
	    ------------------------------------------------------------------------*/
	    ${1}
	
	    /*------------------------------------------------------------------------
	    Return to shell.
	    ------------------------------------------------------------------------*/
	    return 0;
	}
	
# end of snippet

# WinMain()
snippet winmain
	/**===========================================================================
	Windows Application Entry Point
	
	@param hInstance Handle to program instance
	@param hPrevInst Handle to previous program instance
	@param lpCmdLine Command-line string that invoked this program
	@param nShowCmd  Initial window display setting
	@return          Program exit status, 0 = success
	============================================================================*/
	int WINAPI WinMain(
	    HINSTANCE hInstance,
	    HINSTANCE hPrevInst,
	    LPTSTR    lpCmdLine,
	    int       nShowCmd
	) {
	
	    /*------------------------------------------------------------------------
	    Display a message.
	    ------------------------------------------------------------------------*/
	    MessageBoxW(
	        NULL,
	        L"Hello World!",
	        L"Greetings",
	        ( MB_OK | MB_ICONINFORMATION )
	    );
	
	    /*------------------------------------------------------------------------
	    Return to shell.
	    ------------------------------------------------------------------------*/
	    return 0;
	}
	
# end of snippet


#=============================================================================
# Miscellaneous Automation
#=============================================================================

# #include "..."
snippet inc
	#include "${1:`Filename("$1.hpp")`}"
# end of snippet


#=============================================================================
# Source Code Templates
#=============================================================================

# Source code template
snippet source
	/*****************************************************************************
	
	${1:`Filename()`}.cpp
	
	${2:description}
	
	*****************************************************************************/
	
	/*============================================================================
	Includes
	============================================================================*/
	
	/*============================================================================
	Macros
	============================================================================*/
	
	/*============================================================================
	Constants
	============================================================================*/
	
	/*============================================================================
	Implementation
	============================================================================*/
	
	${3}
	
# end of snippet

# Header file template
snippet header
	/*****************************************************************************
	
	${1:`Filename()`}.hpp
	
	${2:description}
	
	*****************************************************************************/
	
	#ifndef _${3:`toupper(Filename())`}_HPP
	#define _$3_HPP
	
	/*============================================================================
	Includes
	============================================================================*/
	
	/*============================================================================
	Macros
	============================================================================*/
	
	/*============================================================================
	Types
	============================================================================*/
	
	${4}
	
	#endif  /* _$3_HPP */
	
# end of snippet

