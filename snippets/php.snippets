##############################################################################
#
# PHP Snippets
#
##############################################################################

#=============================================================================
# Structural Comments
#=============================================================================

# Comment Blocks
snippet c0
	/*----------------------------------------------------------------------------
	${1}
	----------------------------------------------------------------------------*/
snippet c1
	    /*------------------------------------------------------------------------
	    ${1}
	    ------------------------------------------------------------------------*/
snippet c2
	        /*--------------------------------------------------------------------
	        ${1}
	        --------------------------------------------------------------------*/
snippet c3
	            /*----------------------------------------------------------------
	            ${1}
	            ----------------------------------------------------------------*/
snippet c4
	                /*------------------------------------------------------------
	                ${1}
	                ------------------------------------------------------------*/
snippet c5
	                    /*--------------------------------------------------------
	                    ${1}
	                    --------------------------------------------------------*/
snippet c6
	                        /*----------------------------------------------------
	                        ${1}
	                        ----------------------------------------------------*/
# End

# Function-style Comment Block
snippet fc
	/**
	 * ${1:description}
	 *
	 * @param ${2:param}
	 * @return
	 * @throws
	 */
# End

# Function-style Comment Block for Methods
snippet mc
	    /**
	     * ${1:description}
	     *
	     * @param ${2:param}
	     * @return
	     * @throws
	     */
# End

# Separator Bars
snippet b0
	/*==========================================================================*/
snippet b1
	    /*======================================================================*/
# End


#=============================================================================
# Function and Class Templates
#=============================================================================

# Basic Function Template
snippet fun
	/**
	 * ${2:description}
	 *
	 */
	function ${1:name}() {
	
	    ${3}
	}
	
# End

# Verbose Function Template
snippet vfun
	/**
	 * ${2:description}
	 *
	 * @param param1
	 * @param param2
	 * @return
	 * @throws
	 */
	function ${1:name}( $param1, $param2 ) {
	
	    ${3}
	
	    return false;
	}
	
# End

# Basic Class Template
snippet class
	/**
	 * ${2:description}
	 */
	class ${1:name} {
	
	    /**
	     * $1 Constructor
	     */
	    public function __construct() {
	    }
	
	}
	
# End

# Verbose Class Template
snippet vclass
	/**
	 * ${2:description}
	 */
	class ${1:name} ${3:extends BaseClass} ${4:implements Interface} {
	
	    /*------------------------------------------------------------------------
	    Public Properties
	    ------------------------------------------------------------------------*/
	
	    /*------------------------------------------------------------------------
	    Protected Properties
	    ------------------------------------------------------------------------*/
	
	    /*------------------------------------------------------------------------
	    Private Properties
	    ------------------------------------------------------------------------*/
	
	    /*------------------------------------------------------------------------
	    Public Methods
	    ------------------------------------------------------------------------*/
	
	    /**
	     * $1 Constructor
	     *
	     * @param param
	     */
	    public function __construct( $param ) {
	        parent::__construct( $param );
	    }
	
	
	    /**
	     * Represents the object state as a string.
	     *
	     * @return A string representing the object
	     */
	    public function __toString() {
	        return '';
	    }
	
	
	    /*------------------------------------------------------------------------
	    Protected Methods
	    ------------------------------------------------------------------------*/
	
	    /*------------------------------------------------------------------------
	    Private Methods
	    ------------------------------------------------------------------------*/
	
	}
	
# End

# Minimal Interface Template
snippet interface
	/**
	 * ${2:description}
	 */
	interface ${1:name} ${3:extends BaseInterface} {
	
	    ${4}
	
	}
	
# End

# Custom Exception Template
snippet exception
	/**
	 * ${2:description}
	 */
	class ${1:name} extends Exception {
	
	    /**
	     * $1 constructor.
	     *
	     * @param message  Exception message
	     * @param code     Numerical exception code (optional)
	     * @param previous Previous exception (optional)
	     */
	    public function __construct(
	        $message,
	        $code               = 0,
	        Exception $previous = null
	    ) {
	        parent::__construct( $message, $code, $previous );
	    }
	}
	
# End

# Method Template
snippet meth
	/**
	 * ${2:description}
	 *
	 */
	public function ${1:name}() {
	
	    ${3}
	}
	
# End

#-----------------------------------------------------------------------------
# PHP Interface Templates
#-----------------------------------------------------------------------------

#=============================================================================
# Formatting and Style Templates
#=============================================================================

# Columns Reminder
snippet col
	+---+-----------------------------------------------------------------------+
	|1  |5                                                                      |77
	/*****************************************************************************
	File Header
	*****************************************************************************/
	/*============================================================================
	Section Heading
	============================================================================*/
	/*----------------------------------------------------------------------------
	Block Heading
	----------------------------------------------------------------------------*/
	    /*------------------------------------------------------------------------
	    Block Comment
	    ------------------------------------------------------------------------*/
	|1  |5                                                                      |77
	+---+-----------------------------------------------------------------------+
# End


#=============================================================================
# Literals and Common Implementations
#=============================================================================

#=============================================================================
# Miscellaneous Automation
#=============================================================================

# Debugging/testing Output Setup
snippet plain
	////ZIH - temp
	header( 'Content-Type: text/plain; charset=utf-8' );
	echo "${1:message}\n";
	echo json_encode( \$${2:data}, true );
	exit();
	////
# End


#=============================================================================
# Source Code Templates
#=============================================================================

# New Source File Template
snippet source
	<?php
	/*****************************************************************************
	
	${1:title}
	==========
	
	${2:description}
	
	*****************************************************************************/
	
	/*----------------------------------------------------------------------------
	Default Namespace
	----------------------------------------------------------------------------*/
	
	namespace ${5:hzphp}\\${3:module};
	
	/*----------------------------------------------------------------------------
	Dependencies
	----------------------------------------------------------------------------*/
	
	/*----------------------------------------------------------------------------
	Classes
	----------------------------------------------------------------------------*/
	
	/*----------------------------------------------------------------------------
	Functions
	----------------------------------------------------------------------------*/
	
	/*----------------------------------------------------------------------------
	Execution
	----------------------------------------------------------------------------*/
	
	if( realpath( $_SERVER[ 'SCRIPT_FILENAME' ] ) == __FILE__ ) {
	
	    header( 'Content-Type: text/plain; charset=utf-8' );
	
	    ${4}
	
	}
	
# End

# Supporting HTML
snippet html
	<!doctype html>
	<html lang="en">
	<head>
	  <meta charset="utf-8">
	  <title>${1:Title}</title>
	  <link rel="stylesheet" href="styles.css">
	  <script src="script.js"></script>
	</head>
	<body>
	  ${2}
	</body>
	</html>
# End

# Supporting CSS
snippet css
	    /* rendering */
	    body { margin: 0; padding: 0; }
	    h1, h2, h3, h4, h5, h6, p, address, blockquote, pre, ul, ol, dl, form {
	      margin: 0.5em 0;
	      padding: 0;
	    }
	    li { margin: 0 0 0 2em; }
	    blockquote { margin: 0.5em 1em; padding: 0 1em; border-left: solid 1px; }
	    img { border: none; }
	    table { border-collapse: collapse; border-spacing: 0; }
	    hr { margin: 0.1em 0; border: none; border-top: 1px solid; }
	
	    /* typography */
	    body {
	      font: 12pt/130% 'Source Sans Pro', Arial, Helvetica, sans-serif;
	    }
	    h1, h2, h3, h4, h5, h6 {
	      font-family: 'Droid Sans', Tahoma, Geneva, sans-serif;
	    }
	    pre, code {
	      font-family: 'Source Code Pro', Consolas, monospace;
	    }
	    h1 { font-size: 150%; }
	    h2 { font-size: 140%; }
	    h3 { font-size: 130%; }
	    h4 { font-size: 120%; }
	    h5 { font-size: 110%; }
	    h6 { font-size: 100%; }
	
	    /* colors */
	    body { color: #333333; background-color: #FFFFFF; }
	    h1, h2, h3, h4, h5, h6 { color: #333333; }
	    a { color: #0000CC; }
	    a:visited { color: #000066; }
	    a:hover { color: #0066FF; }
	    hr, blockquote { border-color: #CCCCCC; }
	
# End

